# 1:
SELECT DISTINCT c.CustomerId, c.FirstName, c.Phone, c.Company FROM Customer as c
INNER JOIN Employee e ON c.SupportRepId = e.EmployeeId AND e.BirthDate >= DATE('now', '-50 years')
INNER JOIN Invoice i ON c.CustomerId = i.CustomerId
INNER JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
INNER JOIN Track t ON t.TrackId = il.TrackId
WHERE t.GenreId != 1 ORDER BY c.City ASC, c.Email DESC
LIMIT 10

# 2:
SELECT c.FirstName || ' ' || c.LastName, c.Phone, e.FirstName || ' ' || e.LastName, e.Phone FROM Customer c
INNER JOIN Employee e ON c.SupportRepId = e.EmployeeId

# 3:
SELECT DISTINCT c.FirstName , c.Phone FROM Customer c
INNER JOIN Invoice i ON c.CustomerId = i.CustomerId
INNER JOIN InvoiceLine il ON i.InvoiceId = il.InvoiceId
WHERE il.UnitPrice = (SELECT MAX(UnitPrice)FROM InvoiceLine)
ORDER BY c.FirstName ASC

# 4:
SELECT DISTINCT c.FirstName || ' ' || c.LastName, c.Phone FROM Customer c
INNER JOIN Invoice i ON i.CustomerId = c.CustomerId
WHERE i.total > 0 AND c.City IN (Select c.City FROM Customer c GROUP BY (c.City) HAVING count(c.City) > 1)

# 5:
SELECT i.BillingCity FROM Invoice i GROUP BY i.BillingCity ORDER BY SUM(i.total) DESC
LIMIT 3

# 6:
SELECT g. Name, t.Name, t.Composer, a.Title FROM Track t
INNER JOIN Album a ON a.AlbumId = t.AlbumId
INNER JOIN Genre g ON t.GenreId = g.GenreId WHERE t.GenreId = (SELECT g.GenreId from Track t
 INNER JOIN InvoiceLine il ON t.TrackId = il.TrackId
 INNER JOIN Genre g ON t.GenreId = g.GenreId
 GROUP BY g.Name
 ORDER BY SUM(t.UnitPrice*il.Quantity) DESC
 LIMIT 1)
ORDER BY t.Composer ASC